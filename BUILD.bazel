# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("//bazel:library_names.bzl", "hdrs_filegroup_name", "library_dir_name", "mocks_filegroup_name")
load(":libraries.bzl", "GOOGLE_CLOUD_CPP_BIGQUERY_EXPERIMENTAL_LIBRARIES", "GOOGLE_CLOUD_CPP_BIGQUERY_GA_LIBRARIES", "GOOGLE_CLOUD_CPP_BIGQUERY_TRANSITION_LIBRARIES")

package(default_visibility = ["//visibility:public"])

licenses(["notice"])  # Apache 2.0

exports_files([
    "LICENSE",
])

EXPERIMENTAL_LIBRARIES = GOOGLE_CLOUD_CPP_BIGQUERY_EXPERIMENTAL_LIBRARIES

TRANSITION_LIBRARIES = GOOGLE_CLOUD_CPP_BIGQUERY_TRANSITION_LIBRARIES

GA_LIBRARIES = GOOGLE_CLOUD_CPP_BIGQUERY_GA_LIBRARIES

[cc_library(
    name = "experimental-{library}".format(library = library),
    hdrs = ["//google/cloud/{dir}:{group}".format(
        dir = library_dir_name(library),
        group = hdrs_filegroup_name(library),
    )],
    deps = [
        "//google/cloud/{dir}:google_cloud_cpp_bigquery_{library}".format(
            dir = library_dir_name(library),
            library = library,
        ),
    ],
) for library in EXPERIMENTAL_LIBRARIES]

[cc_library(
    name = "experimental-{library}_mocks".format(library = library),
    testonly = True,
    hdrs = ["//google/cloud/{dir}:{group}".format(
        dir = library_dir_name(library),
        group = mocks_filegroup_name(library),
    )],
    deps = [
        "//google/cloud/{dir}:google_cloud_cpp_bigquery_{library}_mocks".format(
            dir = library_dir_name(library),
            library = library,
        ),
    ],
) for library in EXPERIMENTAL_LIBRARIES]

[cc_library(
    name = "experimental-{library}".format(library = library),
    hdrs = ["//google/cloud/{dir}:{group}".format(
        dir = library_dir_name(library),
        group = hdrs_filegroup_name(library),
    )],
    deprecation = "this library is now GA, please use //:{library} instead.".format(library = library),
    tags = ["manual"],
    deps = [
        "//google/cloud/{dir}:google_cloud_cpp_bigquery_{library}".format(
            dir = library_dir_name(library),
            library = library,
        ),
    ],
) for library in TRANSITION_LIBRARIES]

[cc_library(
    name = "experimental-{library}_mocks".format(library = library),
    testonly = True,
    hdrs = ["//google/cloud/{dir}:{group}".format(
        dir = library_dir_name(library),
        group = mocks_filegroup_name(library),
    )],
    deprecation = "this library is now GA, please use //:{library}_mocks instead.".format(library = library),
    tags = ["manual"],
    deps = [
        "//google/cloud/{dir}:google_cloud_cpp_bigquery_{library}_mocks".format(
            dir = library_dir_name(library),
            library = library,
        ),
    ],
) for library in TRANSITION_LIBRARIES]

[cc_library(
    name = "{library}".format(library = library),
    hdrs = ["//google/cloud/{dir}:{group}".format(
        dir = library_dir_name(library),
        group = hdrs_filegroup_name(library),
    )],
    deps = [
        "//google/cloud/{dir}:google_cloud_cpp_bigquery_{library}".format(
            dir = library_dir_name(library),
            library = library,
        ),
    ],
) for library in GA_LIBRARIES + TRANSITION_LIBRARIES]

[cc_library(
    name = "{library}_mocks".format(library = library),
    testonly = True,
    hdrs = ["//google/cloud/{dir}:{group}".format(
        dir = library_dir_name(library),
        group = mocks_filegroup_name(library),
    )],
    deps = [
        "//google/cloud/{dir}:google_cloud_cpp_bigquery_{library}_mocks".format(
            dir = library_dir_name(library),
            library = library,
        ),
    ],
) for library in GA_LIBRARIES + TRANSITION_LIBRARIES]
